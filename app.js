import Gamedig from 'gamedig'
import TelegramBot from "node-telegram-bot-api"


// SERVER SETUP
const SERVER_IP = '127.0.0.1'
const SERVER_PORT = '27015'
const SERVER_TYPE = 'cs16' // counter-stike 1.6
const BOT_ROKEN = ''



const bot = new TelegramBot(BOT_ROKEN, { polling: true })

let IS_READY = true
setInterval(() => IS_READY = true, 120000)

const ANSWERS = [
	'–¢—ã –Ω–µ–¥–æ–æ—Ü–µ–Ω–∏–≤–∞–µ—à—å —Å–µ–±—è. –¢—ã –º–æ–∂–µ—à—å –µ—â—ë —Ö—É–∂–µ! üí©',
	'–ë—ã—Ç—å –≥–µ–Ω–∏–µ–º –≤ –Ω–∞—à–µ–º –º–∏—Ä–µ - —Ç—è–∂–∫–æ–µ –±—Ä–µ–º—è. –•–æ—Ä–æ—à–æ, —á—Ç–æ {name} –Ω–µ –æ–±—Ä–µ–º–µ–Ω—ë–Ω',
	'{name}, —Ç–≤–æ–π —Å–∫—Ä—ã—Ç—ã–π —Ç–∞–ª–∞–Ω—Ç –Ω–∞ —Å—Ç–æ–ª—å–∫–æ –ø—Ä–µ–∫—Ä–∞—Å–µ–Ω, —á—Ç–æ –µ–≥–æ –Ω—É–∂–Ω–æ —Å–∫—Ä—ã–≤–∞—Ç—å –≤–µ—á–Ω–æ',
	'{name}, —É —Ç–µ–±—è –µ—Å—Ç—å —Ç–∞–ª–∞–Ω—Ç, –Ω–µ –≤–µ—Ä—å –Ω–∏–∫–æ–º—É, –∫—Ç–æ —Ç–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç',
	'–ö–æ–≥–¥–∞ –æ–¥–∏–Ω –ø–∞—Ä–µ–Ω—å, –±–æ—Ä—é—â–∏–π—Å—è –∑–∞ –∂–∏–∑–Ω—å —Å–æ —Å–º–µ—Ä—Ç–µ–ª—å–Ω–æ–π –±–æ–ª–µ–∑–Ω—å—é, –ø–æ–∑–Ω–∞–∫–æ–º–∏–ª—Å—è —Å {name}, –æ–Ω –Ω–∞—à—ë–ª –≤ —Å–µ–±–µ —Å–∏–ª—ã –ø—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –±–æ—Ä—å–±—É...',
	'{name} –æ–¥–∏–Ω –∏–∑ –Ω–µ–º–Ω–æ–≥–∏—Ö –∫—Ç–æ –∑–∞—Å–ª—É–∂–∏–≤–∞–µ—Ç —É–Ω–∏–∂–µ–Ω–∏—è',
	'{name}, —Å–ø–∞—Å–∏–±–æ –∑–∞ —Å—á–∞—Å—Ç–ª–∏–≤–æ–µ –¥–µ—Ç—Å—Ç–≤–æ. –í –¥–µ—Ç—Å—Ç–≤–µ –º—ã –æ —Ç–µ–±–µ –Ω–µ –∑–Ω–∞–ª–∏))',
	'–í—Å–µ–≥–¥–∞ –∑–∞–¥–∞–≤–∞–ª—Å—è –≤–æ–ø—Ä–æ—Å–æ–º, –ø–æ—á–µ–º—É —Å—Ç–æ–ª—å–∫–æ —Ö–µ–π—Ç–∞ –≤ —Å—Ç–æ—Ä–æ–Ω—É {name}? –ï–≥–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –≤ –¥–µ—Å—è—Ç–∫–∏ —Ä–∞–∑ –±–æ–ª—å—à–µ!',
	'–ï—Å–ª–∏ –≤—ã –Ω–µ —Å—á–∏—Ç–∞–µ—Ç–µ —á—Ç–æ {name} —Ä–µ–∞–ª—å–Ω—ã–π –∫—Ä–∏–Ω–∂, —Ç–æ —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –≤—ã {name}',
]

bot.on('message', async (msg) => {
	if (msg.left_chat_member || msg.new_chat_members) return

	if (msg.reply_to_message && msg.reply_to_message.from.is_bot) {
		return bot.sendMessage(msg.chat.id, 'ü§∑')
	}

	if (Array.isArray(msg.entities) && (msg.entities.length && msg.entities[0].type === 'bot_command')) {

		const rand = Math.floor(Math.random() * ANSWERS.length)
		const kek_answer = ANSWERS[rand].replaceAll('{name}', msg.from.first_name || msg.from.username)
		
		return bot.sendMessage(msg.chat.id, kek_answer)
	}

	switch (msg.text) {
		case '.—Å–µ—Ä–≤–µ—Ä':
			if (!IS_READY) {
				return bot.sendMessage(msg.chat.id, '–ü–æ–¥–æ–∂–¥–∏ –ø–∞—Ä—É –º–∏–Ω—É—Ç ...')
			}
			
			try {
				const server = Gamedig.query({
					type: SERVER_TYPE,
					host: SERVER_IP,
					port: SERVER_PORT
				})

				let mess = `üî´ ${server.name} \n`
				mess += `‚ÑπÔ∏è ${server.map} | ${server.raw.numplayers}/${server.maxplayers} \n\n`
				
				server.players.forEach(pl => {
					mess += `üéÆ ${pl.name} | —Ñ—Ä–∞–≥–∏ ${pl.raw.score} \n`
				})

				bot.sendMessage(msg.chat.id, mess)

				IS_READY = false
			} catch (error) {
				console.log('catch error:', error);
				return bot.sendMessage(msg.chat.id, '–í–æ–∑–Ω–∏–∫–ª–∞ –ø—Ä–æ–±–ª–µ–º–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ ¬Ø\_(„ÉÑ)_/¬Ø')
			}
		break;
	
		default:
		break;
	}
})

bot.on('new_chat_members', msg => {
	const name = msg.new_chat_members[0].first_name || msg.new_chat_members[0].username
	bot.sendMessage(msg.chat.id, `*${name}* —Ç–µ–ø–µ—Ä—å –≤–º–µ—Å—Ç–µ —Å –Ω–∞–º–∏, –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º! üëã\nüìé –ü—Ä–∞–≤–∏–ª–∞ –∏ –¥—Ä—É–≥—É—é –∏–Ω—Ñ—É, –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –∑–∞–∫—Ä–µ–ø–µ –≥—Ä—É–ø–ø—ã! ‚¨ÜÔ∏è`, { parse_mode: 'markdown' })
})

bot.on('left_chat_member', msg => {
	const name = msg.left_chat_member.first_name || msg.left_chat_member.username
	bot.sendMessage(msg.chat.id, `*${name}* –ø—Ä–∏–Ω—è–ª(–∞) –≤–æ–ª–µ–≤–æ–µ —Ä–µ—à–µ–Ω–∏–µ –∏ –ø–æ–∫–∏–Ω—É–ª(–∞) –Ω–∞—Å.`, { parse_mode: 'markdown' })
})

bot.on('polling_error', console.log)